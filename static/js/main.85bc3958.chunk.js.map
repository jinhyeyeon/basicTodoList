{"version":3,"sources":["components/Btn/Btn1/Btn1.js","constants/menu.js","components/Header/Header.js","components/Modal/Modal.js","components/PostItem/PostItem.js","components/NoContent/NoContent.js","App.js","serviceWorker.js","index.js"],"names":["Btn1","_ref","onClick","children","className","icon","on","react_default","a","createElement","classNames","defaultProps","MENU_HOME","Header","state","_this2","this","onModal","props","Btn_Btn1_Btn1","setState","io","React","Component","Modal","value","_this$props","onClose","onWrite","onChange","target","placeholder","href","e","preventDefault","PostItem","onDelete","date","text","id","d","now","Date","differenceInDays","distanceInWords","locale","koLocale","addSuffix","format","getFormattedDate","componentName","App","modalOpen","posts","localStorage","getItem","parsed","JSON","parse","prevProps","prevState","setItem","stringify","_this$state","components_Header_Header","components_Modal_Modal","length","concat","Object","toConsumableArray","map","post","key","components_PostItem_PostItem","assign","filter","NoContent_componentName","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"qZAIMA,SAAO,SAAAC,GAMP,IALFC,EAKED,EALFC,QACAC,EAIEF,EAJFE,SACAC,EAGEH,EAHFG,UACAC,EAEEJ,EAFFI,KACAC,EACEL,EADFK,GAEA,OACIC,EAAAC,EAAAC,cAAA,OACIL,UAAWM,IAAW,OAAQN,EAAW,CAACE,OAC1CJ,QAASA,GAETK,EAAAC,EAAAC,cAAA,SACKJ,GACGE,EAAAC,EAAAC,cAAA,YAAOJ,GAEVF,MAMjBH,EAAKW,aAAe,CAChBL,IAAI,GAGON,QC9BFY,EAAY,OCuDVC,6MAhDXC,MAAQ,CACJR,GAAIM,2EAGC,IAAAG,EAAAC,KAEDV,EACAU,KAAKF,MADLR,GAEGW,EAAWD,KAAKE,MAAhBD,QACP,OACIV,EAAAC,EAAAC,cAAA,UAAQL,UAAU,UACdG,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACXG,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACU,EAAD,CACIf,UAAU,WACVE,GAAIA,IAAOM,EACXV,QAAS,kBAAMa,EAAKK,SAAS,CAACd,GAAI,UAClCD,KAAME,EAAAC,EAAAC,cAACY,EAAA,EAAD,OAJV,WASJd,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACU,EAAD,CACIf,UAAU,WACVE,GDjCL,WCiCSA,EACJJ,QAAS,kBAAMa,EAAKK,SAAS,CAACd,GAAI,YAClCD,KAAME,EAAAC,EAAAC,cAACY,EAAA,EAAD,OAJV,mBAWZd,EAAAC,EAAAC,cAACU,EAAD,CACIf,UAAU,YACVF,QAASe,GAETV,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACY,EAAA,EAAD,OAJV,kDArCKC,IAAMC,WCuCZC,oNAvCXV,MAAQ,CACJW,MAAO,4EAGF,IAAAV,EAAAC,KAAAU,EACsBV,KAAKE,MAAzBS,EADFD,EACEC,QAASC,EADXF,EACWE,QACTH,EAAST,KAAKF,MAAdW,MACP,OACIlB,EAAAC,EAAAC,cAAA,OAAKL,UAAU,SACXG,EAAAC,EAAAC,cAAA,OAAKL,UAAU,SACXF,QAASyB,IAEbpB,EAAAC,EAAAC,cAAA,OAAKL,UAAU,aACXG,EAAAC,EAAAC,cAAA,oDACAF,EAAAC,EAAAC,cAAA,YACIgB,MAAOA,EACPI,SAAU,SAAA5B,GAAA,IAAWwB,EAAXxB,EAAE6B,OAASL,MAAX,OAAuBV,EAAKK,SAAS,CAACK,WAChDM,YAAY,8DAEhBxB,EAAAC,EAAAC,cAACU,EAAD,CAAMjB,QAAS,kBAAM0B,EAAQH,KACzBlB,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACY,EAAA,EAAD,OADV,4BAIAd,EAAAC,EAAAC,cAAA,KACIuB,KAAK,IACL5B,UAAU,QACVF,QAAS,SAAC+B,GACNA,EAAEC,iBACFP,GAAWA,EAAQM,KAGvB1B,EAAAC,EAAAC,cAACY,EAAA,EAAD,gBAhCJC,IAAMC,4FC4CVY,mLA1BH,IAAAT,EAMDV,KAAKE,MAJLkB,EAFCV,EAEDU,SACAC,EAHCX,EAGDW,KACAC,EAJCZ,EAIDY,KACAC,EALCb,EAKDa,GAEJ,OACIhC,EAAAC,EAAAC,cAAA,OAAKL,UAAU,aACXG,EAAAC,EAAAC,cAAA,YAxBhB,SAA0B+B,GACtB,IAAMC,EAAM,IAAIC,KACVL,EAAO,IAAIK,KAAKF,GAGtB,OAAIC,EAAMJ,EAAO,IAAkB,eAE/BM,IAAiBF,EAAKJ,GAAQ,GACvBO,IAAgBH,EAAKJ,EAAM,CAACQ,OAAQC,IAAUC,WAAW,IAG7DC,IAAOX,EAAM,cAaDY,CAAiBZ,IACxB9B,EAAAC,EAAAC,cAAA,SAAI6B,GACJ/B,EAAAC,EAAAC,cAAA,KACIuB,KAAK,IACL5B,UAAU,SACVF,QAAS,SAAC+B,GACNA,EAAEC,iBACFE,GAAYA,EAASG,KAGzBhC,EAAAC,EAAAC,cAACY,EAAA,EAAD,eApBIC,IAAMC,WClBT2B,0LAEb,OACI3C,EAAAC,EAAAC,cAAA,KAAGL,UAAU,cACTG,EAAAC,EAAAC,cAAA,YAAMF,EAAAC,EAAAC,cAACY,EAAA,EAAD,OADV,kEAH+BC,IAAMC,YCqElC4B,6MAjEXrC,MAAQ,CACJsC,WAAW,EACXC,MAAO,uFAIP,IAAMA,EAAQC,aAAaC,QAAQ,SACnC,GAAIF,EAAO,CACP,IAAMG,EAASC,KAAKC,MAAML,GAC1BrC,KAAKI,SAAS,CACViC,MAAOG,gDAKAG,EAAWC,GACtB5C,KAAKF,MAAMuC,QAAUO,EAAUP,OAC/BC,aAAaO,QAAQ,QAASJ,KAAKK,UAAU9C,KAAKF,MAAMuC,yCAIvD,IAAAtC,EAAAC,KAAA+C,EACsB/C,KAAKF,MAAzBsC,EADFW,EACEX,UAAWC,EADbU,EACaV,MAClB,OACI9C,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACXG,EAAAC,EAAAC,cAACuD,EAAD,CACI/C,QAAS,kBAAMF,EAAKK,SAAS,CAACgC,WAAW,OAE5CA,GACG7C,EAAAC,EAAAC,cAACwD,EAAD,CACItC,QAAS,kBAAMZ,EAAKK,SAAS,CAACgC,WAAW,KACzCxB,QAAS,SAAAU,GACLvB,EAAKK,SAAS,CACViC,MAAK,CACL,CACId,GAAIc,EAAMa,OACV5B,OACAD,KAAM,IAAIK,OAJTyB,OAAAC,OAAAC,EAAA,EAAAD,CAMFrD,EAAKD,MAAMuC,QAEdD,WAAW,OAK3B7C,EAAAC,EAAAC,cAAA,MAAIL,UAAU,QACTiD,EAAMiB,IAAI,SAAAC,GAAI,OACXhE,EAAAC,EAAAC,cAAA,MAAI+D,IAAKD,EAAKhC,IACVhC,EAAAC,EAAAC,cAACgE,EAADL,OAAAM,OAAA,CACItC,SAAU,SAAAG,GAAE,OAAIxB,EAAKK,SAAS,CAACiC,MAAOA,EAAMsB,OAAO,SAAAJ,GAAI,OAAIA,EAAKhC,KAAOA,QACnEgC,OAIE,IAAjBlB,EAAMa,QACH3D,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAACmE,EAAD,gBA1DVtD,IAAMC,WCKJsD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5E,EAAAC,EAAAC,cAAC2E,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.85bc3958.chunk.js","sourcesContent":["import React from 'react';\r\nimport classNames from 'classnames';\r\nimport './btn1.scss'\r\n\r\nconst Btn1 = ({\r\n    onClick,\r\n    children,\r\n    className,\r\n    icon,\r\n    on\r\n}) => {\r\n    return (\r\n        <div\r\n            className={classNames('btn1', className, {on})}\r\n            onClick={onClick}\r\n        >\r\n            <p>\r\n                {icon && (\r\n                    <span>{icon}</span>\r\n                )}\r\n                {children}\r\n            </p>\r\n        </div>\r\n    );\r\n}\r\n\r\nBtn1.defaultProps = {\r\n    on: false\r\n};\r\n\r\nexport default Btn1;","export const MENU_HOME = 'home';\r\nexport const MENU_NOTICE = 'notice';","import React from 'react';\r\nimport './header.scss';\r\nimport {IoMdHome, IoIosNotifications, IoMdCreate} from \"react-icons/io\";\r\nimport Btn1 from '../Btn/Btn1/Btn1';\r\nimport {MENU_HOME, MENU_NOTICE} from '../../constants/menu';\r\n\r\nclass Header extends React.Component {\r\n    state = {\r\n        on: MENU_HOME\r\n    };\r\n    \r\n    render() {\r\n        const {\r\n            on\r\n        } = this.state;\r\n        const {onModal} = this.props;\r\n        return (\r\n            <header className=\"header\">\r\n                <h1>TodoList</h1>\r\n                <nav className=\"nav\">\r\n                    <ul>\r\n                        <li>\r\n                            <Btn1\r\n                                className=\"icon-btn\"\r\n                                on={on === MENU_HOME}\r\n                                onClick={() => this.setState({on: 'home'})}\r\n                                icon={<IoMdHome />}\r\n                            >\r\n                                홈\r\n                            </Btn1>\r\n                        </li>\r\n                        <li>\r\n                            <Btn1 \r\n                                className=\"icon-btn\"\r\n                                on={on === MENU_NOTICE}\r\n                                onClick={() => this.setState({on: 'notice'})}\r\n                                icon={<IoIosNotifications />}\r\n                            >\r\n                                알림\r\n                            </Btn1>\r\n                        </li>\r\n                    </ul>\r\n                </nav>\r\n                <Btn1\r\n                    className=\"write-btn\"\r\n                    onClick={onModal}\r\n                >\r\n                    <span><IoMdCreate /></span>\r\n                    새 글 작성하기\r\n                </Btn1>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport './modal.scss'\r\nimport Btn1 from '../Btn/Btn1/Btn1';\r\nimport {IoMdClose, IoMdCreate} from \"react-icons/io\";\r\n\r\nclass Modal extends React.Component {\r\n    state = {\r\n        value: ''\r\n    };\r\n\r\n    render() {\r\n        const {onClose, onWrite} = this.props;\r\n        const {value} = this.state;\r\n        return (\r\n            <div className=\"modal\">\r\n                <div className=\"dim-bg\"\r\n                    onClick={onClose}\r\n                />\r\n                <div className=\"write-box\">\r\n                    <h2>새 글 작성하기</h2>\r\n                    <textarea\r\n                        value={value}\r\n                        onChange={({target: {value}}) => this.setState({value})}\r\n                        placeholder=\"새 글을 작성해주세요.\"\r\n                    />\r\n                    <Btn1 onClick={() => onWrite(value)}>\r\n                        <span><IoMdCreate /></span>\r\n                        작성하기\r\n                    </Btn1>\r\n                    <a\r\n                        href=\"#\"\r\n                        className=\"close\"\r\n                        onClick={(e) => {\r\n                            e.preventDefault();\r\n                            onClose && onClose(e);\r\n                        }} \r\n                    >\r\n                        <IoMdClose />\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Modal;","import React from 'react';\r\nimport './post-item.scss'\r\nimport {IoMdTrash} from \"react-icons/io\";\r\nimport koLocale from 'date-fns/locale/ko';\r\nimport differenceInDays from 'date-fns/difference_in_days';\r\nimport distanceInWords from 'date-fns/distance_in_words';\r\nimport format from 'date-fns/format';\r\n\r\nfunction getFormattedDate(d) {\r\n    const now = new Date();\r\n    const date = new Date(d);\r\n  \r\n    // 1분 이내면 방금\r\n    if (now - date < 60 * 1000) return '방금';\r\n    // 10일 이내면 텍스트 형식\r\n    if (differenceInDays(now, date) < 10) {\r\n        return distanceInWords(now, date, {locale: koLocale, addSuffix: true});\r\n    }\r\n    // 그 외의 경우엔 YYYY-MM-DD\r\n    return format(date, 'YYYY-MM-DD');\r\n};\r\n\r\n class PostItem extends React.Component {\r\n    render() {\r\n        const {\r\n            onDelete,\r\n            date,\r\n            text,\r\n            id\r\n        } = this.props;\r\n        return (\r\n            <div className=\"post-item\">\r\n                <span>{getFormattedDate(date)}</span>\r\n                <p>{text}</p>\r\n                <a\r\n                    href=\"#\"\r\n                    className=\"delete\"\r\n                    onClick={(e) => {\r\n                        e.preventDefault();\r\n                        onDelete && onDelete(id);\r\n                    }} \r\n                >\r\n                    <IoMdTrash />\r\n                </a>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n export default PostItem; ","import React from 'react';\r\nimport './no-content.scss';\r\nimport {IoIosCloseCircleOutline} from \"react-icons/io\";\r\n\r\nexport default class componentName extends React.Component {\r\n    render() {\r\n        return (\r\n            <p className=\"no-content\">\r\n                <span><IoIosCloseCircleOutline /></span>\r\n                등록된 TODO가 없습니다.\r\n            </p>\r\n        )\r\n    }\r\n}\r\n","import React from 'react';\r\nimport './styles/app.scss';\r\nimport Header from './components/Header/Header';\r\nimport Modal from './components/Modal/Modal';\r\nimport PostItem from './components/PostItem/PostItem';\r\nimport NoContent from './components/NoContent/NoContent';\r\n\r\nclass App extends React.Component {\r\n    state = {\r\n        modalOpen: false,\r\n        posts: [],\r\n    }\r\n\r\n    componentDidMount() {\r\n        const posts = localStorage.getItem('posts');\r\n        if (posts) {\r\n            const parsed = JSON.parse(posts);\r\n            this.setState({\r\n                posts: parsed,\r\n            });\r\n        }\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (this.state.posts !== prevState.posts) {\r\n            localStorage.setItem('posts', JSON.stringify(this.state.posts));\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {modalOpen, posts} = this.state;\r\n        return (\r\n            <div className=\"app\">\r\n                <Header\r\n                    onModal={() => this.setState({modalOpen: true})}\r\n                />\r\n                {modalOpen && (\r\n                    <Modal\r\n                        onClose={() => this.setState({modalOpen: false})}\r\n                        onWrite={text => {\r\n                            this.setState({\r\n                                posts: [\r\n                                {\r\n                                    id: posts.length,\r\n                                    text,\r\n                                    date: new Date(),\r\n                                },\r\n                                ...this.state.posts,\r\n                                ],\r\n                                modalOpen: false\r\n                            })\r\n                        }}\r\n                    />\r\n                )}\r\n                <ul className=\"post\">\r\n                    {posts.map(post => \r\n                        <li key={post.id}>\r\n                            <PostItem\r\n                                onDelete={id => this.setState({posts: posts.filter(post => post.id !== id)})}\r\n                                {...post}\r\n                            />\r\n                        </li>\r\n                    )}\r\n                    {posts.length === 0 && (\r\n                        <li>\r\n                            <NoContent />\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './styles/common.scss';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}